type UserId = principal;
type CampaignId = text;

type User = record {
  id: UserId;
  name: text;
  email: opt text;
  createdAt: int;
};

type Campaign = record {
  id: CampaignId;
  name: text;
  description: text;
  owner: UserId;
  acceptedTokens: vec text;
  subaccount: blob;
  createdAt: int;
};

service : {
  whoami: () -> (principal);
  getPrincipal: () -> (principal) query;
  createUser: (name: text, email: opt text) -> (bool);
  userExists: () -> (bool);
  getAllUsers: () -> (vec User) query;
  clearUsers: () -> ();
  createCampaign: (name: text, description: text, acceptedTokens: vec text) -> (text);
  getCampaign: (id: text) -> (opt Campaign) query;
  getCampaignSubaccount: (id: text) -> (opt blob) query;
  getUserCampaigns: (userId: principal) -> (vec Campaign) query;
  getAllCampaigns: () -> (vec Campaign) query;
  debugCompare: (userId: principal) -> (vec record { text; principal; bool }) query;
  debugPrincipal: (userId: principal) -> (text) query;
}
